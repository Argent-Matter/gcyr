pluginManagement {
    repositories {
        mavenLocal()
        gradlePluginPortal()
        maven { url = 'https://maven.neoforged.net/releases' }
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
    versionCatalogs {
        // Minecraft Version
        def minecraftVersionVeryOld = "1.20.1"
        def minecraftVersion = "1.21.1"

        // Mod Dependencies Versions
        // Common
        def emiVersion = "1.1.13"
        def kjsVersion = "2101.7.0-build.171"

        // NeoForge
        def neoForgeVersion = "21.1.4"
        def registrateForgeVersion = "MC1.21-1.3.0+16"
        def topForgeVersion = "1.20.4_neo-11.0.0-1"

        // Forge
        def radiumVersion = "0.12.6"

        // Libs
        def parchmentVersion = "2024.07.28" // https://parchmentmc.org/docs/getting-started
        def configurationVersion = "5573796"
        def gtCeuVersion = "1.4.1"
        def ldLibVersion = "1.0.27.a"
        def moddevgradleVersion = "2.0.15-beta"

        forge {
            def neoForge = version("neoForge", "${neoForgeVersion}")
            library("neoForge", "net.neoforged", "neoforge").versionRef(neoForge)

            def gtceu = version("gtceu", gtCeuVersion)
            library("gtceu-forge", "com.gregtechceu.gtceu", "gtceu-${minecraftVersion}").versionRef(gtceu)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-neoforge", "com.lowdragmc.ldlib", "ldlib-neoforge-${minecraftVersion}").versionRef(ldLib)

            def registrate = version("registrate", registrateForgeVersion)
            library("registrate", "com.tterrag.registrate", "Registrate").versionRef(registrate)

            def emi = version("emi", emiVersion + "+" + minecraftVersion)
            library("emi", "dev.emi", "emi-neoforge").versionRef(emi)

            def theoneprobe = version("theoneprobe", topForgeVersion)
            library("theoneprobe", "mcjty.theoneprobe", "theoneprobe").versionRef(theoneprobe)

            def kubejs = version("kubejs", kjsVersion)
            library("kubejs", "dev.latvian.mods", "kubejs-neoforge").versionRef(kubejs)

            def configuration = version("configuration", configurationVersion)
            library("configuration", "curse.maven", "configuration-444699").versionRef(configuration)

            def radium = version("radium", radiumVersion)
            library("radium", "com.github.Reforged-Hub", "radium-upstream").versionRef(radium)
        }

        libs {
            version("parchment", parchmentVersion)

            version("minecraft", minecraftVersion)
            version("minecraftVeryOld", minecraftVersionVeryOld)

            def neogradle = version("moddevgradle", moddevgradleVersion)
            plugin("moddevgradle", "net.neoforged.moddev").versionRef(neogradle)
        }
    }
}

rootProject.name = "${mod_id}"

